{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fswiss\fprq2\fcharset0 Calibri;}{\f4\froman\fprq2\fcharset0 Cambria;}{\f5\fmodern\fprq1\fcharset0 Courier New;}{\f6\fmodern\fprq1\fcharset128 Courier New;}{\f7\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f8\fnil\fprq2\fcharset0 Mangal;}{\f9\fnil\fprq0\fcharset128 Mangal;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red0\green0\blue255;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057 Default;}
{\*\cs15\snext15 Default Paragraph Font;}
{\*\cs16\sbasedon15\snext16\b\kerning1\hich\af0\dbch\af4\ab\loch\f4\fs32 Heading 1 Char;}
{\*\cs17\sbasedon15\snext17\i\b\hich\af0\dbch\af4\ai\ab\loch\f4\fs28 Heading 2 Char;}
{\*\cs18\snext18\cf2\ul\ulc0\langfe255\lang255 Internet Link;}
{\s19\sbasedon0\snext20\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\cf0\kerning1\hich\af7\langfe2057\dbch\af8\loch\f2\fs28\lang2057 Heading;}
{\s20\sbasedon0\snext20\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\sb0\sa120\cf0\kerning1\hich\af0\langfe2057\dbch\af3\loch\f3\fs24\lang2057 Text body;}
{\s21\sbasedon20\snext21\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\sb0\sa120\cf0\kerning1\hich\af0\langfe2057\dbch\af9\loch\f3\fs24\lang2057 List;}
{\s22\sbasedon0\snext22\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\sb120\sa120\cf0\i\kerning1\hich\af0\langfe2057\dbch\af9\ai\loch\f3\fs24\lang2057 Caption;}
{\s23\sbasedon0\snext23\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\cf0\kerning1\hich\af0\langfe2057\dbch\af9\loch\f3\fs24\lang2057 Index;}
{\s24\sbasedon0\snext0\ilvl0\outlinelevel0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\cf0\kerning1\hich\af0\langfe2057\dbch\af3\loch\f3\fs24\lang2057 heading 1;}
{\s25\sbasedon0\snext0\ilvl1\outlinelevel1\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\cf0\kerning1\hich\af0\langfe2057\dbch\af3\loch\f3\fs24\lang2057 heading 2;}
}{\info{\author hugh.lowry}{\creatim\yr2014\mo1\dy7\hr15\min1}{\revtim\yr2014\mo1\dy7\hr15\min2}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice}{\vern4010}}\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt0 Default;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1440\margr1440\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s25\ilvl1\outlinelevel1\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\cf0\kerning1\hich\af0\langfe2057\dbch\af3\loch\f3\fs24\lang2057\pagebb\li0\ri0\lin0\rin0\fi0\qc\sb240\sa120\keepn\ltrpar{\ul\ulc0\b\afs40\ab\rtlch \ltrch\loch\fs40
Sprite Slicer 2D}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\ul\ulc0\b\afs28\ab\rtlch \ltrch\loch\fs28
Overview}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
Sprite Slicer 2D provides a set of static C# script functions to quickly and easily slice sprites along a given vector. There is no need to create any new game objects or managers \'96 simply call the functions from your script and Sprite Slicer 2D will handle the rest.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
For each sprite that is sliced, two or more new sprites will be created, each with the correct 2D polygon collider and physics behaviour according to the slice location and slice type. Sliced sprites will share the same render material whenever possible in order to preserve batching and reduce draw calls.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\ul\ulc0\b\afs28\ab\rtlch \ltrch\loch\fs28
Support}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
If you have any problems, queries, or feature requests regarding this product, please do feel free to contact me - I will always take the time to reply to every question, and will endeavour to help you in whatever way I can. Email is generally the fastest way to contact me.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Email: }{{\field{\*\fldinst HYPERLINK "mailto:hughlowry@hotmail.com" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf2\ul\ulc0\langfe255\rtlch \ltrch\loch\lang255
hughlowry@hotmail.com}}}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Twitter: }{{\field{\*\fldinst HYPERLINK "https://twitter.com/mr_square" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf3\ul\ulc0\langfe255\rtlch \ltrch\loch\lang255
https://twitter.com/mr_square}{\rtlch \ltrch\loch
}} }
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Unity Forums Private Message: mrsquare}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Unity Asset Store reviews would be much appreciated if you feel that the package (and post-purchase support) has been of a suitable quality.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\ul\ulc0\b\afs28\ab\rtlch \ltrch\loch\fs28
Slicing Functions}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
SpriteSlicer2D.SliceAllSprites()}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\afs22\rtlch \ltrch\loch\fs22
Cuts any non-static, non-kinematic physics enabled sprite that is intersected by the given vector.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
SpriteSlicer2D.SliceSprite()}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\afs22\rtlch \ltrch\loch\fs22
Cuts a specific sprite along the given vector. }
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
SpriteSlicer2D.ExplodeSprite()}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\afs22\rtlch \ltrch\loch\fs22
Randomly cuts the given object multiple times, and then applies a force (optionally) to the resulting pieces.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
SpriteSlicer2D.ShatterSprite()}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\afs22\rtlch \ltrch\loch\fs22
Decomposes the given sprite into its constituent polygons, then applies a force (optionally) to the resulting pieces.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
Vector points should always be given in world coordinates. }
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\ul\ulc0\b\afs28\ab\rtlch \ltrch\loch\fs28
Advanced Usage}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
All SpriteSlicer2D functions can optionally generate a list of SpriteSlicer2DSliceInfo objects, which provide the calling function with information about objects that were sliced, the enter and exit points of those slices, and which child objects were generated as a result of the slice. This could be useful if, eg. you wanted to add a particle effect at the entry and exit point of each slice. To make use of this functionality, pass in an empty }{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
List<SpriteSlicer2DSliceInfo> }{\afs22\rtlch \ltrch\loch\fs22
to the slicing functions, and it will be filled out with the appropriate information.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
You can pass a Unity LayerMask variable to the }{\afs22\rtlch \ltrch\loch\fs22\loch\f6
SliceAllSprites()}{\afs22\rtlch \ltrch\loch\fs22
 function if you only wish to cut sprites on a particular layer. A layer mask is essentially a binary value that has different bits set to 0 or 1 to represent which layers should and should not be included in raycasting operations. Setting up a LayerMask is not entirely trivial if you are not familiar with the concept of bit shifting \'96 }{{\field{\*\fldinst HYPERLINK "http://answers.unity3d.com/questions/8715/how-do-i-use-layermasks.html" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf2\ul\ulc0\langfe255\afs22\rtlch \ltrch\loch\fs22\lang255
this}{\rtlch \ltrch\loch
}} forum thread is a good read for understanding how they work.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
By default, Sprite Slicer will automatically destroy any object once it is sliced, leaving only the child objects in the scene. You can override this behaviour by passing }{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
false }{\afs22\rtlch \ltrch\loch\fs22
as the }{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
destroySlicedObjects }{\afs22\rtlch \ltrch\loch\fs22
parameter, in which case the parent object will simply be disabled rather than destroyed.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
Sprite Slicer will send a OnSpriteSliced event to any GameObject once it has been sliced. To make use of this, simply implement the following function:}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
void OnSpriteSliced(SpriteSlicer2DSliceInfo sliceInfo)}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
in any script attached to the sliced GameObject, and it will trigger if/when the sprite is sliced.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\ul\ulc0\b\afs28\ab\rtlch \ltrch\loch\fs28
Convex Polygons}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
Due to the nature of the sprite slicing algorithm, polygon colliders can only be sliced if they define convex shapes. Unfortunately Unity is quite overenthusiastic when creating the vertices for polygon colliders, which often results in a concave shape even on sprites that look entirely concave. SpriteSlicer2D provides a menu option to automatically parse a polygon collider and transform it into a convex shape \'96 simply select your GameObject, and choose Tools \u8594\'3f Sprite Slicer 2D \u8594\'3f Make Convex from the main menu bar.  This also has the advantage of simplifying the mesh, which will help increase performance \'96 making your physics shapes as simple as possible is always a good  idea.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
SpriteSlicer2D will print errors at runtime if you attempt to slice a concave polygon \'96 these warnings can be suppressed by setting SpriteSlicer2D.DebugLoggingEnabled to false.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
If you }{\i\afs22\ai\rtlch \ltrch\loch\fs22
really}{\afs22\rtlch \ltrch\loch\fs22
 want to be able to slice concave polygons, you can try setting }{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
SpriteSlicer2D.s_AllowConvexSlicing}{\afs22\rtlch \ltrch\loch\fs22
 in SpriteSlicer2D.cs to }{\dbch\af5\rtlch \ltrch\loch\fs22\loch\f5
true}{\afs22\rtlch \ltrch\loch\fs22
. This may work satisfactorily on certain concave polygons depending on their shape and the slice direction, but is intended only as a debug feature so is to be used at the user's own risk - it will most likely result in oddly shaped child sprites.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\ul\ulc0\b\afs28\ab\rtlch \ltrch\loch\fs28
2D ToolKit Support}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
2D Toolkit sprites are fully supported by Sprite Slider 2D \'96 simply open up SpriteSlicer2D.cs and uncomment the first line that says }
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\afs22\rtlch \ltrch\loch\fs22
//#define TK2D_SLICING_ENABLED}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\afs22\rtlch \ltrch\loch\fs22
(this is disabled by default to prevent compile errors for users that do not own 2D Toolkit)}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\afs22\rtlch \ltrch\loch\fs22
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj{\ul\ulc0\b\ab\rtlch \ltrch\loch
Legal}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj{\rtlch \ltrch\loch
}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\qj\ltrpar{\afs22\rtlch \ltrch\loch\fs22
All sprites and artwork included in the package are the property of Stuart Wood and may not be used in other projects without his prior consent. Stu can be contacted at }{{\field{\*\fldinst HYPERLINK "mailto:stu_wood1282@hotmail.co.uk" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\cf2\i0\ulnone\ulc0\b0\langfe255\afs22\ai0\ab0\rtlch \ltrch\loch\fs22\lang255
stu_wood1282@hotmail.co.uk}{\afs22\rtlch \ltrch\loch\fs22
}}.}
\par \pard\plain \s0\ql{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\faauto\li0\ri0\lin0\rin0\fi0\nowidctlpar\cf0\kerning1\hich\af0\langfe2057\dbch\af3\afs24\lang1081\loch\f3\fs24\lang2057\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
}
\par }